@page "/magico/enum/randomizearray"

<PageTitle>Magico - Enumerable - Randomize Array - Aptivi Project Demos</PageTitle>

@using System.Threading;
@using System.Net;
@using System.Text;
@using System.IO
@using System.Text.Json
@using Demos.Data
@using Magico.Enumeration
@using Textify.General
@inject NavigationManager NavManager

<Hero Title="Magico - Enumerable - Randomize Array">
	You can demonstrate a feature from Magico where we showcase this feature,
	and we provide the API documentation here for future reference. This demonstrates the
	"Randomize array" feature.
</Hero>
<BrandedBorder>
	<p>Enter a group of values in their own lines</p>
	<InputTextArea @bind-Value="Input"></InputTextArea>
	<p>Results from <code>RandomizeArray()</code></p>
	@if (Results is not null)
	{
		<ul>
			@foreach (string result in Results)
			{
				<li>@result</li>
			}
		</ul>
    }
    else if (Errored)
    {
        <p>Error obtaining results: @ErrorReason</p>
    }
	<div class="d-grid gap-2 d-sm-flex">
		<button class="btn btn-primary btn-lg" type="button" @onclick="@ClickEvents[0]">Randomize</button>
		<button class="btn btn-primary btn-lg" type="button" @onclick="@ClickEvents[1]">API Reference</button>
	</div>
</BrandedBorder>

@code {
    public string Input { get; set; } = "Line 1\nLine 2\nLine 3\nLine 4\nLine 5\nLine 6\nLine 7\nLine 8\nLine 9\nLine 10";
    public bool Errored { get; set; } = false;
    public string ErrorReason { get; set; } = "";
	public string[] Results { get; set; }
	public EventCallback[] ClickEvents => [
		EventCallback.Factory.Create(this, ProcessInput),
		EventCallback.Factory.Create(this, new Action(() => NavManager.NavigateTo("https://aptivi.github.io/Magico/api/Magico.Enumeration.ArrayTools.html#Magico_Enumeration_ArrayTools_RandomizeArray__1___0___"))),
	];

	public void ProcessInput()
    {
        try
        {
            Errored = false;
            var inputLines = Input.SplitNewLines();
            Results = inputLines.RandomizeArray();
        }
        catch (Exception ex)
        {
            Errored = true;
            ErrorReason = ex.Message;
        }
	}
}
