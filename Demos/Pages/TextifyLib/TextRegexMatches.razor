@page "/text/regex/matches"

<PageTitle>Textify - Regex - Matches - Aptivi Project Demos</PageTitle>

@using System.Threading;
@using System.Net;
@using System.Text;
@using System.IO
@using System.Text.Json
@using Demos.Data
@using System.Text.RegularExpressions
@using Textify.General
@using Textify.Tools
@inject NavigationManager NavManager

<Hero Title="Textify - Regex - Matches">
	You can demonstrate a feature from Textify where we showcase the text casing feature,
	and we provide the API documentation here for future reference. This demonstrates the
	"Find Matches with Regex" feature.
</Hero>
<BrandedBorder>
	<p>Enter some text: <InputText @bind-Value="Input"></InputText></p>
	<p>Enter regex: <InputText @bind-Value="Source"></InputText></p>
	<p>Results from <code>Matches()</code></p>
	@if (Results is not null)
	{
		<table class="table">
			<thead>
				<tr>
					<th scope="col">Name</th>
					<th scope="col">Value</th>
					<th scope="col">Index</th>
					<th scope="col">Length</th>
					<th scope="col">Success</th>
				</tr>
			</thead>
			<tbody>
				@foreach (Match result in Results)
				{
					<tr>
						<td>@result.Name</td>
						<td>@result.Value</td>
						<td>@result.Index</td>
						<td>@result.Length</td>
						<td>@result.Success</td>
					</tr>
				}
			</tbody>
		</table>
    }
    else if (Errored)
    {
        <p>Error obtaining results: @ErrorReason</p>
    }
	<div class="d-grid gap-2 d-sm-flex">
		<button class="btn btn-primary btn-lg" type="button" @onclick="@ClickEvents[0]">Process</button>
		<button class="btn btn-primary btn-lg" type="button" @onclick="@ClickEvents[1]">API Reference</button>
	</div>
</BrandedBorder>

@code {
	public string Input { get; set; } = "Hello and welcome to Terminaux!";
    public string Source { get; set; } = /*lang=regex*/ @"[AEIOUaeiou]";
    public bool Errored { get; set; } = false;
    public string ErrorReason { get; set; } = "";
	public MatchCollection Results { get; set; }
	public EventCallback[] ClickEvents => [
		EventCallback.Factory.Create(this, ProcessInput),
		EventCallback.Factory.Create(this, new Action(() => NavManager.NavigateTo("https://aptivi.github.io/Textify/api/Textify.Tools.RegexTools.html#Textify_Tools_RegexTools_Matches_System_String_System_String_"))),
	];

	public void ProcessInput()
    {
        try
        {
            Errored = false;
            Results = RegexTools.Matches(Input, Source);
        }
        catch (Exception ex)
        {
            Errored = true;
            ErrorReason = ex.Message;
        }
	}
}
