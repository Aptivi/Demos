@page "/text/misc/wrapsentences"

<PageTitle>Textify - Misc - Wrap Sentences - Aptivi Project Demos</PageTitle>

@using System.Threading;
@using System.Net;
@using System.Text;
@using System.IO
@using System.Text.Json
@using Demos.Data
@using Textify.General
@inject NavigationManager NavManager

<Hero Title="Textify - Misc - Wrap Sentences">
	You can demonstrate a feature from Textify where we showcase the text casing feature,
	and we provide the API documentation here for future reference. This demonstrates the
	"Wrap long string to a set of sentences" feature.
</Hero>
<BrandedBorder>
	<p>Enter a string: <InputText @bind-Value="Input"></InputText></p>
	<p>Maximum width: <InputNumber @bind-Value="MaxWidth"></InputNumber></p>
	<p>Indentation length: <InputNumber @bind-Value="IndentLength"></InputNumber></p>
	<label><InputCheckbox @bind-Value="ByWords"></InputCheckbox> Split by words</label>
	<p>Results from <code>GetWrappedSentences()</code> or <code>GetWrappedSentencesByWords()</code></p>
	@if (Results is not null)
	{
		<table class="table">
			<thead>
				<tr>
					<th scope="col">Sentence</th>
					<th scope="col">Length</th>
					<th scope="col">Index</th>
				</tr>
			</thead>
			<tbody>
				@for (int i = 0; i < Results.Length; i++)
				{
					string result = Results[i];
					<tr>
						<td>@result</td>
						<td>@result.Length</td>
						<td>@i</td>
					</tr>
				}
			</tbody>
		</table>
    }
    else if (Errored)
    {
        <p>Error obtaining results: @ErrorReason</p>
    }
	<div class="d-grid gap-2 d-sm-flex">
		<button class="btn btn-primary btn-lg" type="button" @onclick="@ClickEvents[0]">Analyze</button>
		<button class="btn btn-primary btn-lg" type="button" @onclick="@ClickEvents[1]">API Reference</button>
		<button class="btn btn-primary btn-lg" type="button" @onclick="@ClickEvents[2]">API Reference</button>
	</div>
</BrandedBorder>

@code {
	public string Input { get; set; } = "Welcome to Textify! This library provides text tools that make tasks related to text manipulation easier for you. This text is intentionally very long to demonstrate the sentence wrapping feature in a nice way straight from this webpage. This is also to make it easier for you to access this tool.";
	public int MaxWidth { get; set; } = 50;
	public int IndentLength { get; set; } = 0;
    public bool ByWords { get; set; } = false;
    public bool Errored { get; set; } = false;
    public string ErrorReason { get; set; } = "";
	public string[] Results { get; set; }
	public EventCallback[] ClickEvents => [
		EventCallback.Factory.Create(this, ProcessInput),
		EventCallback.Factory.Create(this, new Action(() => NavManager.NavigateTo("https://aptivi.github.io/Textify/api/Textify.General.TextTools.html#Textify_General_TextTools_GetWrappedSentences_System_String_System_Int32_"))),
		EventCallback.Factory.Create(this, new Action(() => NavManager.NavigateTo("https://aptivi.github.io/Textify/api/Textify.General.TextTools.html#Textify_General_TextTools_GetWrappedSentencesByWords_System_String_System_Int32_"))),
	];

	public void ProcessInput()
    {
        try
        {
            Errored = false;
            Results =
                ByWords ?
                Input.GetWrappedSentencesByWords(MaxWidth, IndentLength) :
                Input.GetWrappedSentences(MaxWidth, IndentLength);
        }
        catch (Exception ex)
        {
            Errored = true;
            ErrorReason = ex.Message;
        }
	}
}
