@page "/text/unicode/query"

<PageTitle>Textify - Unicode - Query String - Aptivi Project Demos</PageTitle>

@using System.Threading;
@using System.Net;
@using System.Text;
@using System.IO
@using System.Text.Json
@using Demos.Data
@using Textify.Data.Unicode
@using Textify.General
@inject NavigationManager NavManager

<Hero Title="Textify - Unicode - Query String">
	You can demonstrate a feature from Textify where we showcase the text casing feature,
	and we provide the API documentation here for future reference. This demonstrates the
	"Get Unicode info for all characters in a string" feature.
</Hero>
<BrandedBorder>
	<p>Enter some text: <InputText @bind-Value="Input"></InputText></p>
	<p>Results from <code>QueryChar()</code></p>
	@if (Results is not null)
	{
		<table class="table">
			<thead>
				<tr>
					<th scope="col">Current name</th>
					<th scope="col">Name in Unicode 1.0</th>
					<th scope="col">Unicode version</th>
					<th scope="col">Codepage number</th>
					<th scope="col">Bidirectionality</th>
				</tr>
			</thead>
			<tbody>
				@for (int i = 0; i < Results.Count; i++)
				{
					var result = Results[i];
					<tr>
						<td>@result.Na</td>
						<td>@result.Na1</td>
						<td>@result.Age</td>
						<td>@result.Cp</td>
						<td>@result.Bc</td>
					</tr>
				}
			</tbody>
		</table>
    }
    else if (Errored)
    {
        <p>Error obtaining results: @ErrorReason</p>
    }
	<div class="d-grid gap-2 d-sm-flex">
		<button class="btn btn-primary btn-lg" type="button" @onclick="@ClickEvents[0]">Analyze</button>
		<button class="btn btn-primary btn-lg" type="button" @onclick="@ClickEvents[1]">API Reference</button>
	</div>
</BrandedBorder>

@code {
    public string Input { get; set; } = "Terminaux رائعٌ! Terminaux رائعٌ!";
    public bool Errored { get; set; } = false;
    public string ErrorReason { get; set; } = "";
	public List<UnicodeCharInfo> Results { get; set; }
	public EventCallback[] ClickEvents => [
		EventCallback.Factory.Create(this, ProcessInput),
		EventCallback.Factory.Create(this, new Action(() => NavManager.NavigateTo("https://aptivi.github.io/Textify/api/Textify.Data.Unicode.UnicodeQuery.html#Textify_Data_Unicode_UnicodeQuery_QueryChar_System_Char_"))),
	];

	public void ProcessInput()
    {
        try
        {
            Errored = false;
            Results = new();
            foreach (char inputChar in Input)
            {
                var charInfo = UnicodeQuery.QueryChar(inputChar);
                Results.Add(charInfo);
            }
        }
        catch (Exception ex)
        {
            Errored = true;
            ErrorReason = ex.Message;
        }
	}
}
